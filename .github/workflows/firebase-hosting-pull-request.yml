name: Build, Test & Deploy QA
on:
    pull_request:
        types: [opened, reopened, edited, synchronize]

jobs:
    build:
        name: Build frontend
        runs-on: 'ubuntu-latest'
        steps:
            - name: Checkout branch
              uses: actions/checkout@v2

            - name: Setup Yarn
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'yarn'

            - name: Install dependencies
              run: yarn install
              working-directory: frontend

            - name: Build app
              run: yarn build
              working-directory: frontend

            - name: Upload build
              uses: actions/upload-artifact@v2
              with:
                  name: frontend-preprod
                  path: frontend/build

    test:
        name: Test frontend
        runs-on: 'ubuntu-latest'
        steps:
            - name: Checkout branch
              uses: actions/checkout@v2

            - name: Setup Yarn
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'yarn'

            - name: Install dependencies
              run: yarn install
              working-directory: frontend

            - name: Test app
              run: yarn test
              working-directory: frontend
            # todo : add code coverage reports

    deploy_qa:
        name: Deploy to Firebase Hosting preview (QA)
        runs-on: 'ubuntu-latest'
        needs: [build, test]
        if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}' # exclude PR from forks
        steps:
            - name: Checkout branch
              uses: actions/checkout@v2

            - name: Download build
              uses: actions/download-artifact@v2
              with:
                  name: frontend-preprod
                  path: frontend/build

            - name: Deploy to QA
              uses: FirebaseExtended/action-hosting-deploy@v0
              with:
                  entrypoint: frontend
                  repoToken: '${{ secrets.GITHUB_TOKEN }}'
                  firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TASKS_OUREAPP }}'
                  projectId: '${{ secrets.FIREBASE_ID }}'
                  channelId: 'pull-request-${{ github.event.pull_request.number }}'
